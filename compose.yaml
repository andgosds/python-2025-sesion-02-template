services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      # Usuario y contrase침a de administrador de MongoDB
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      # Contrase침a de root y credenciales de usuario para MySQL
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_DATABASE: example_db
      MYSQL_USER: example_user
      MYSQL_PASSWORD: example_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./seed/mysql_init:/docker-entrypoint-initdb.d

  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    restart: always
    environment:
      # Token de acceso (tr치talo como contrase침a)
      JUPYTER_TOKEN: tu_jupyter_password
    ports:
      - "8888:8888"
    volumes:
      - jupyter_data:/home/jovyan/work
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: example_user
      PMA_PASSWORD: example_password
    ports:
      - "8080:80"

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    restart: always
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_password
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: mongo_user
      ME_CONFIG_BASICAUTH_PASSWORD: mongo_password
    ports:
      - "8081:8081"
volumes:
  mongodb_data:
  mysql_data:
  jupyter_data:
